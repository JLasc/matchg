{"version":3,"sources":["components/Header.js","components/Footer.js","components/Alert.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","score","topScore","class","Footer","alertSystem","dangerAlert","role","successAlert","App","state","dataArr","data","isHidden","isWrong","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","toggleHidden","_this","setState","toggleHiddenWrong","endGame","reset","forEach","item","clicked","winListener","setTimeout","handleClick","id","clickedImage","filter","this","_this2","ImageCard","map","index","onClick","key","src","alt","components_Header","Alert","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.48fa0566.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = props => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-light justify-content-between header-navbg\">\r\n                <a className=\"navbar-brand navFontSize header-match-title header-font-size\" > Memory Game</a>\r\n                <span className='mr-sm-2 navFontSize header-font-size'>Score: {props.score} | Top Score: {props.topScore} </span>\r\n            </nav>\r\n            <div class=\"jumbotron jumbotron-fluid text-white jumboBg\">\r\n                <div class=\"container text-center\">\r\n                    <p class=\"lead\">Click on an image to earn points!</p>\r\n                    <p>Do not click the same picture twice.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer-style'>\r\n            <p className='footer-text text-center'>\r\n                Jon Lascaze 2019\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\nconst alertSystem = {\r\n    dangerAlert: () => {\r\n        return (\r\n            <div class=\"alert alert-danger text-center\" role=\"alert\">\r\n                You have already clicked that shield. You lose!\r\n            </div>\r\n        )\r\n    },\r\n    successAlert: () => {\r\n        return (\r\n            <div class=\"alert alert-success text-center\" role=\"alert\">\r\n                You have Won!\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default alertSystem","import React, { Component } from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Alert from './components/Alert'\nimport data from './assets/json/list.json'\nimport './assets/css/style.css'\n\n\nclass App extends Component {\n  state = {\n    score: 0,\n    topScore: 0,\n    dataArr: data,\n    isHidden: true,\n    isWrong: false\n  }\n\n  shuffle = array => {\n    let currentIndex = array.length, temporaryValue, randomIndex\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  componentWillMount() {\n    this.shuffle(data)\n  }\n  toggleHidden = () => {\n    this.setState({ isHidden: !this.state.isHidden })\n  }\n\n  toggleHiddenWrong = () => {\n    this.setState({ isWrong: !this.state.isWrong })\n  }\n\n  endGame = () => {\n    const reset = this.state.dataArr\n\n    if (this.state.topScore > this.state.score) {\n      //reset json values to clicked: false\n      reset.forEach(item => { item.clicked = false; })\n      this.setState({ score: 0 })\n      this.shuffle(data)\n    } else {\n      reset.forEach(item => { item.clicked = false; })\n      this.setState({ score: 0, topScore: this.state.score })\n      this.shuffle(data)\n    }\n  }\n\n  toggleHidden = () => {\n    this.setState({ isHidden: !this.state.isHidden })\n  }\n\n  toggleHiddenWrong = () => {\n    this.setState({ isWrong: !this.state.isWrong })\n  }\n\n\n  winListener = () => {\n    if (this.state.isHidden === false) {\n      setTimeout(this.toggleHidden, 2000)\n    }\n\n    else if (this.state.isWrong === true) {\n      setTimeout(this.toggleHiddenWrong, 2000)\n    }\n  }\n\n  handleClick = id => {\n    const imageId = this.state.dataArr\n    const clickedImage = imageId.filter(data => data.id === id)\n\n    if (clickedImage[0].clicked === false) {\n      clickedImage[0].clicked = true\n      this.setState({\n        score: this.state.score += 1,\n      })\n      this.shuffle(data)\n\n    } else if (this.state.score === 12) {\n      this.setState({ score: 0, topScore: 12 })\n      this.toggleHidden()\n\n    } else {\n      this.toggleHiddenWrong()\n      this.endGame()\n    }\n\n  }\n\n  render() {\n    const ImageCard = this.state.dataArr.map((item, index) => {\n      return (\n        <div className='container drop'>\n          <img className='img-thumbnail' onClick={() => this.handleClick(item.id)} key={index} src={item.src} alt=\"\" />\n        </div>\n      )\n    });\n\n    return (\n      <div>\n        <Header score={this.state.score} topScore={this.state.topScore} />\n        {this.winListener()}\n        {!this.state.isHidden && <Alert.successAlert />}\n        {this.state.isWrong && <Alert.dangerAlert />}\n        <div className='container drop'>\n          {ImageCard}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}